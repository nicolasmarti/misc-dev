module Eq where

  eq [A:: Set] (a :: A) :: A -> Prop :=
  | eqrefl :: eq a a

  Notation eq (=) none 110

  eqrec :: {A :: Set} -> (P :: A -> Type) ->
 	      (a b :: A) -> (a = b) -> P a -> P b

  eqrec {?A} {?B} ?P ?a ?b ?Heq ?Pa :=
    match Heq with
      | eqrefl a := Pa

end

